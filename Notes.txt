1) string concatenation
		join = used to join two strings
		ex:-
		    print(''.join(["Hello there" , "utkarsh"]))

File Concatenation ->
	

import os

a = "D:"
b = "WORK"
c = "PYTHON"
d = "example.txt"

with open(os.path.join(a, b, c , d)) as f:
    print(f.read())

String formatting ->
	who = 'Gary'
	how_many = 12

	print(who, 'bought', how_many, 'apples today!')
	print('{} bought {} apples today!'.format(who, how_many))


2) List comprehension
	x = [i for i in range(5)]

	print(x)				OUTPUT - [0, 1, 2, 3, 4]
							 [0, 1, 2, 3, 4]

 	x = []
	for i in range(5):
    	    x.append(i)

	print(x)

More in List	


input_list  = [1,2,5,10,50,15,5,20]

def div_by_five(num):
    if num % 5 == 0:
        return True
    else:
        return False

x  = (i for i in input_list if div_by_five(i))
    ## x = []
    ##for i in input_list:
    ##  if div_by_five(i):
    ##     x.append(i)

for i in x:
    print(i)

[print(i) for i in x]	


3) multiple For 
	for i in range(5):
    	  for ii in range(5):
            print(i, ii)
    
		OR

	[[print(i, ii) for ii in range(5)] for i in range(5)]

	[[print(i,ii) for ii in range(5)] for i in range(5)]


printing as a list
	x = [[[i, ii] for ii in range(5)] for i in range(5)]
	print(x)


4) Enumerate

example  = ['left', 'right','up','down']

for i in range(len(example)):
    print(i, example[i])
	
	OR ( above can also be rewritten as)	

for i, j in enumerate(example):
    print(i,j)



5) zip function

x = [1, 2, 3, 4]
y = [5 ,6, 7, 8]
z = ['a', 'b', 'c', 'd']

for a,b,c in zip(x,y,z):
    print(a,b,c)

OUTPUT - 1 5 a
	 2 6 b
	 3 7 c
	 4 8 d


->list to tuple

	x = [1, 2, 3, 4]
	y = [5 ,6, 7, 8]
	z = ['a', 'b', 'c', 'd']

	zip(x,y,z)

	for i in zip(x, y, z):
	    print(i)

	OUTPUT : (1, 5, 'a')
		 (2, 6, 'b')
		 (3, 7, 'c')
	 	 (4, 8, 'd')



6) More of Generators
	Generator doesn't return anything it yields a value
	
	code to find the correct code combo
	(In below code commented section is the normal way and the non commented is by using generators


correct_combo = (3,6,1)

# false_combo = False
# for c1 in range(10):
#     if false_combo:
#         break
#     for c2 in range(10):
#         if false_combo:
#             break
#         for c3 in range(10):
#             if (c1, c2, c3) == correct_combo:
#                 print('Found the combo {}'.format((c1,c2,c3)))
#                 false_combo = True
#                 break
#             print(c1,c2,c3)
            

def code_gen():
    for c1 in range(10):
        for c2 in range(10):
            for c3 in range(10):
                yield (c1, c2, c3)

for (c1, c2 ,c3) in code_gen():
    print(c1, c2, c3)
    if(c1, c2, c3) == correct_combo:
        print('Found the combo {}'.format((c1,c2,c3)))
        break


7)Object oriented programming


import pygame
import random

class blob:
    def __init__(self, color):
        self.x = random.randrange(0, WIDTH)
        self.y = random.randrange(0, HEIGHT)
        self.size = random.randrange(4, 8)
        self.color = color

    def move(self):
        self.move_x = random.randrange(-1, 2)
        self.move_y = random.randrange(-1, 2)
        self.x += self.move_x
        self.y +=self.move_y

        if self.x < 0: self.x = 0
        elif self.x > WIDTH: self.x = WIDTH

        if self.y < 0: self.y = 0
        elif self.y > HEIGHT: self.y = HEIGHT




































